/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.uniregensburg;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class App {

    public static void main(String[] args) throws IOException, InterruptedException {
        String query = "(Alternativ* OR Future OR Zukunft OR Zukünftig* OR Entwurf OR Draft OR Konzept* OR Concept* OR Model*) (Online OR Internet OR Web) (Werbung OR Advertising OR Ad OR Tracking) (Souverän* OR Sovereignty OR Selbstbestimmung OR Self-determination OR \"Self determination\" OR Choice-driven OR \"Choice driven\") (\"personenbezogene Daten\" OR \"personal data\" OR \"personal information\" OR Datenschutz OR privacy OR PII)";
        ApiClient apiClient = new ApiClient();
        JsonArray records = apiClient.getRecords(query);
        System.out.println("total size: " + records.size());
                
        List<Article> articles = new ArrayList<Article>();

        for (JsonElement recordElement : records) {
            JsonObject recordObject = recordElement.getAsJsonObject();
            String identifier = recordObject.get("identifier").getAsString();
            String title = recordObject.get("title").getAsString();
            String aabstract = recordObject.get("abstract").getAsString();
            String doi = recordObject.get("doi").getAsString();
            JsonArray urls = recordObject.get("url").getAsJsonArray();
            String url = null;
            for (JsonElement urlElement : urls) {
                JsonObject urlObject = urlElement.getAsJsonObject();
                if (urlObject.get("format").getAsString().isEmpty()) {
                    url = urlObject.get("value").getAsString();
                }
            }
            Article article = new Article(identifier, title, aabstract, doi, url);
            articles.add(article);
        }

        System.out.println("articles size: " + articles.size());

        Search search = new Search(articles);
        List<Article> result = search.findInAbstract(query);
        System.out.println("Found articles: " + result.size());

        for (Article article : result) {
            System.out.println(article);
        }
    }
}
